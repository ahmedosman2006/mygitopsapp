name: Build Solution and Generate Artifacts

on:
  workflow_dispatch:  # Manual trigger via GitHub UI

jobs:
  build:
    runs-on: windows-latest  # GitHub-hosted Windows agent

    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v3

      - name: üß∞ Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0'

      - name: üîÑ Restore Dependencies
        run: dotnet restore myopsapp.sln

      - name: üèóÔ∏è Build Solution
        run: dotnet build myopsapp.sln --configuration Release --no-restore --verbosity detailed

      - name: üì¶ Publish .NET API
        run: dotnet publish ./myopsapp.csproj -c Release -o ./publish

      - name: üöÄ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-api-artifact
          path: ./publish

  deploy:
    name: Deploy Artifact to On-Prem IIS
    runs-on: self-hosted
    needs: build
    environment:
      name: on-prem-deploy

    env:
      IIS_PATH: C:\inetpub\wwwroot\MyApi
      BACKUP_ROOT: C:\Backups\MyApi
      APP_POOL_NAME: MyApiAppPool

    steps:
      - name: üì• Download Published Artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnet-api-artifact
          run-id: ${{ github.event.workflow_run.id }}
          path: C:\Deploy\MyApi

      - name: üßº Backup Current Site Files
        run: |
          $timestamp = Get-Date -Format "yyyy-MM-dd_HHmm"
          $backupPath = "${{ env.BACKUP_ROOT }}_$timestamp"
          New-Item -ItemType Directory -Path $backupPath -Force
          Copy-Item -Path "${{ env.IIS_PATH }}\*" -Destination $backupPath -Recurse -Force
        shell: pwsh

      - name: üßπ Clean Previous Deployment
        run: |
          Remove-Item -Recurse -Force "${{ env.IIS_PATH }}\*" -ErrorAction SilentlyContinue
        shell: pwsh

      - name: ‚õî Stop App Pool (before file copy)
        run: |
          Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process -Force
          Import-Module WebAdministration
          Stop-WebAppPool -Name "${{ env.APP_POOL_NAME }}"
        shell: powershell

      - name: üì§ Copy New Files to IIS Folder
        run: |
          Copy-Item -Path "C:\Deploy\MyApi\*" -Destination "${{ env.IIS_PATH }}" -Recurse -Force
        shell: pwsh

      - name: üîÅ Start Application Pool
        run: |
          Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process -Force
          Import-Module WebAdministration
          Start-WebAppPool -Name "${{ env.APP_POOL_NAME }}"
        shell: powershell

